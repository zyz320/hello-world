#coding:gbk
"""
第一个小项目：Rock-paper-scissors-lizard-Spock
作者：植物生产类六班甄雨卓
时间：2020/4/8
"""

import random
comp_number=random.randint(0,4)  # 利用random.randrange()自动产生0-4之间的随机整数，作为计算机随机选择的游戏对象，存入变量comp_number

def name_to_number(name):  #定义name_to_number函数，使用if/elif/else语句将各游戏对象对应到不同的整数
	if name=="石头":
		return 0
		
	elif name=="史波克":
		return 1
		
	elif name=="纸":
		return 2
		
	elif name=="蜥蜴":
		return 3
		
	else:
		return 4
		
"""
将游戏的不同对象对应到整数 (0, 1, 2, 3, or 4)
"""

def number_to_name(number):   #定义number_to_name函数，使用if/elif/else语句将不同的整数对应到游戏的不同对象
	if number==0:
		return "石头"
		
	elif number==1:
		return "史波克"
		
	elif number==2:
		return "纸"
		
	elif number==3:
		return "蜥蜴"
		
	else:
		return "剪刀"
		
"""
将整数 (0, 1, 2, 3, or 4)对应到游戏的不同对象
"""


def rpsls(player_choice_number,comp_number):   #定义函数rpsls， # 利用if/elif/else 语句，根据RPSLS规则对用户选择和计算机选择进行判断，并返回判断结果
	if player_choice_number==comp_number:
		return "您和计算机出的一样呢"
	elif player_choice_number==0 and (comp_number==3 or comp_number==4):
		return "您赢了"
	elif player_choice_number==1 and (comp_number==0 or comp_number==4):
		return "您赢了"
	elif player_choice_number==2 and (comp_number==1 or comp_number==0):
		return "您赢了"
	elif player_choice_number==3 and (comp_number==1 or comp_number==2):
		return "您赢了"
	elif player_choice_number==4 and (comp_number==2 or comp_number==3):
		return "您赢了"
	else:
		return"计算机赢了"
	 # 如果用户和计算机选择一样，则显示“您和计算机出的一样呢”，如果用户获胜，则显示“您赢了”，反之则显示“计算机赢了”	

"""
用户玩家任意给出一个选择，根据RPSLS游戏规则，返回上对应的结果
"""


print("欢迎使用RPSLS游戏")
print("----------------") # 输出"-------- "进行分割


print("请输入您的选择:")    # 显示用户输入提示
player_choice=input()     # 用户通过键盘将自己的游戏选择对象输入，存入变量player_choice
print("----------------") # 输出"-------- "进行分割


if player_choice not in ("石头,剪刀,布,蜥蜴,史波克"):    #判断用户的选择是不是石头/剪刀/布/蜥蜴/史波克中的一个，若不是，则输出“Error: No Correct Name”
	print("Error: No Correct Name")
else:
	player_choice_number=name_to_number(player_choice)# 调用name_to_number()函数将用户的游戏选择对象转换为相应的整数，存入变量player_choice_number
	comp_name=number_to_name(comp_number)             # 调用number_to_name()函数将计算机产生的随机数转换为对应的游戏对象

	print("您的选择为：%s"%player_choice)    # 在屏幕上显示您选择的对象
	print("计算机的选择为：%s"%comp_name)     # 在屏幕上显示计算机选择的随机对象
	print(rpsls(player_choice_number,comp_number))    #调用rpsls函数，根据RPSLS规则对用户选择和计算机选择进行判断，并在屏幕上显示判断结果
